# Tested with: Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.1.217 Build 20200306
#              Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.3.304 Build 20200925
#              Intel(R) Fortran Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.1 Build 20201112
#              Intel(R) Fortran Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.3.0 Build 20210609_000000
#              Intel MPI, MKL, LIBINT 2.6.0, LIBXC 5.1.5, LIBXSMM 1.16.1, ELPA 2021.05.001, PLUMED 2.7.2, SPGLIB 1.16.0,
#              LIBVORI 210412, SIRIUS 7.2.5
# Author: Matthias Krack (matthias.krack@psi.ch, PSI, July 2021)

CC          = mpiicc
FC          = mpiifort
LD          = mpiifort
AR          = ar -r

include      $(MPI_PATH)/plumed2/2.7.2/lib/plumed/src/lib/Plumed.inc.static

ELPA_VER    = 2021.05.001
ELPA_INC    = $(MPI_PATH)/elpa/$(ELPA_VER)/include/elpa_openmp-$(ELPA_VER)
ELPA_LIB    = $(MPI_PATH)/elpa/$(ELPA_VER)/lib

LIBINT_INC  = $(INTEL_PATH)/libint/2.6.0-lmax-4/include
LIBINT_LIB  = $(INTEL_PATH)/libint/2.6.0-lmax-4/lib

LIBVORI_LIB = $(INTEL_PATH)/libvori/210412/lib

LIBXC_INC   = $(INTEL_PATH)/libxc/5.1.5/include
LIBXC_LIB   = $(INTEL_PATH)/libxc/5.1.5/lib

LIBXSMM_INC = $(INTEL_PATH)/libxsmm/1.16.1/include
LIBXSMM_LIB = $(INTEL_PATH)/libxsmm/1.16.1/lib

SIRIUS_INC  = $(INTEL_PATH)/sirius/7.2.5/include
SIRIUS_LIB  = $(INTEL_PATH)/sirius/7.2.5/lib

SPGLIB_INC  = $(INTEL_PATH)/spglib/1.16.0/include
SPGLIB_LIB  = $(INTEL_PATH)/spglib/1.16.0/lib

CFLAGS      = -O2 -fopenmp -fp-model precise -funroll-loops -g -qopenmp-simd -traceback -xHost

DFLAGS      = -D__ELPA
DFLAGS     += -D__FFTW3
DFLAGS     += -D__GSL
DFLAGS     += -D__LIBINT
DFLAGS     += -D__LIBVORI
DFLAGS     += -D__LIBXC
DFLAGS     += -D__LIBXSMM
DFLAGS     += -D__MAX_CONTR=4
DFLAGS     += -D__MKL
DFLAGS     += -D__MPI_VERSION=3
DFLAGS     += -D__PLUMED2
DFLAGS     += -D__SPGLIB
DFLAGS     += -D__parallel
DFLAGS     += -D__SCALAPACK
DFLAGS     += -D__SIRIUS
DFLAGS     += -D__CHECK_DIAG

FCFLAGS     = $(CFLAGS) $(DFLAGS)
FCFLAGS    += -diag-disable=8291
FCFLAGS    += -diag-disable=8293
FCFLAGS    += -fpp
FCFLAGS    += -free
FCFLAGS    += -I$(MKLROOT)/include -I$(MKLROOT)/include/fftw
FCFLAGS    += -I$(ELPA_INC)/elpa -I$(ELPA_INC)/modules
FCFLAGS    += -I$(LIBINT_INC)
FCFLAGS    += -I$(LIBXC_INC)
FCFLAGS    += -I$(LIBXSMM_INC)
FCFLAGS    += -I$(SIRIUS_INC)
FCFLAGS    += -I$(SPGLIB_INC)

LDFLAGS     = $(FCFLAGS) -static-intel -static_mpi
LDFLAGS_C   = -nofor-main

MKL_LIB     = $(MKLROOT)/lib/intel64

LIBS        = $(PLUMED_DEPENDENCIES)
LIBS       += $(ELPA_LIB)/libelpa_openmp.a
LIBS       += $(LIBVORI_LIB)/libvori.a
LIBS       += $(LIBXC_LIB)/libxcf03.a $(LIBXC_LIB)/libxc.a
LIBS       += $(LIBINT_LIB)/libint2.a
LIBS       += $(LIBXSMM_LIB)/libxsmmf.a $(LIBXSMM_LIB)/libxsmm.a
LIBS       += $(SPGLIB_LIB)/libsymspg.a
# Only needed for SIRIUS
LIBS       += ${SIRIUS_LIB}/libsirius.a
LIBS       += $(INTEL_PATH)/SpFFT/1.0.4/lib/libspfft.a
LIBS       += $(INTEL_PATH)/SpLA/1.4.0/lib/libspla.a
LIBS       += $(INTEL_PATH)/hdf5/1.12.0/lib/libhdf5.a
#
LIBS       += $(MKL_LIB)/libmkl_scalapack_lp64.a
LIBS       += -Wl,--start-group
LIBS       += $(MKL_LIB)/libmkl_intel_lp64.a
LIBS       += $(MKL_LIB)/libmkl_sequential.a
LIBS       += $(MKL_LIB)/libmkl_core.a
LIBS       += $(MKL_LIB)/libmkl_blacs_intelmpi_lp64.a
LIBS       += -Wl,--end-group
LIBS       += $(GSL_LIBRARY_DIR)/libgsl.a $(GSL_LIBRARY_DIR)/libgslcblas.a
LIBS       += $(LIBPATH)/libz.a
LIBS       += $(GCC_LIBRARY_DIR)/libstdc++.a

# Required due to memory leak that occurs if high optimisations are used
mp2_optimize_ri_basis.o: mp2_optimize_ri_basis.F
	$(FC) -c $(subst O2,O0,$(FCFLAGS)) $<
